<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Visitor Management System</title>
   <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
   <link href="https://fonts.googleapis.com/css?family=Inconsolata" rel="stylesheet" type="text/css">
   <link href="https://raw.githubusercontent.com/daneden/animate.css/master/animate.css" rel="stylesheet" type="text/css">
   <link href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css" rel="stylesheet" type="text/css">
   <link href="css/style.css" rel="stylesheet" type="text/css" />
   <link rel="icon" href="images/favicon.png" type="image/png">
<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
       <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/js/materialize.min.js"></script>
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
</head>
<style>
@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,700');
@import url('https://fonts.googleapis.com/icon?family=Material+Icons');

/**{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html{
    background-color: #fff;
    font:normal 16px/1.5 sans-serif;
    color: #333;
}

h3{
    font: normal 32px/1.5 'Open Sans', sans-serif;
    color: #2c3e50;
    margin: 50px 0;
    text-align: center;
}


.container{
    max-width: 1000px;
    margin: 50px auto;
    padding: 20px;
    background-color: #dd2626;
}
*/
.app{
    width: 100%;
    position: relative;
}

.app #start-camera{
    display: none;
    border-radius: 13px;
    max-width: 400px;
    color: #fff;
    background-color: #448AFF;
    text-decoration: none;
    padding: 15px;
    opacity: 0.8;
    /*margin: 50px auto;*/
    text-align: center;
}

.app video#camera-stream{
    display: none;
    width: 100%;
}

.app img#snap{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;
    display: none;
}

.app #error-message{
    width: 100%;
    background-color: #ccc;
    color: #9b9b9b;
    font-size: 28px;
    padding: 200px 100px;
    text-align: center;
    display: none;
}

.app .controls{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 20;

    display: flex;
    align-items: flex-end;
    justify-content: space-between;
   /* padding: 30px;*/
    display: none;
}

.app .controls a{
    border-radius: 50%;
    color: #fff;
    background-color: #111;
    text-decoration: none;
    padding: 15px;
    line-height: 0;
    opacity: 0.7;
    outline: none;
    -webkit-tap-highlight-color: transparent;
}

.app .controls a:hover{
    opacity: 1;
}

.app .controls a.disabled{
    background-color: #555;
    opacity: 0.5;
    cursor: default;
    pointer-events: none;
}

.app .controls a.disabled:hover{
    opacity: 0.5;
}

.app .controls a i{
    font-size: 18px;
}

.app .controls #take-photo i{
    font-size: 32px;
}

.app canvas{
    display: none;
}



.app video#camera-stream.visible,
.app img#snap.visible,
.app #error-message.visible
{
    display: block;
    border: 10px solid #000a0909;
    border-radius: 40px;
}

.app .controls.visible{
    display: flex;
}



@media(max-width: 1280px){
    .container{
        margin: 40px;
    }

    .app #start-camera.visible{
        display: block;
    }

    .app .controls a i{
        font-size: 16px;
    }

    .app .controls #take-photo i{
        font-size: 24px;
    }
}


@media(max-width: 600px){
    .container{
        margin: 10px;
    }

    .app #error-message{
        padding: 80px 50px;
        font-size: 18px;
    }

    .app .controls a i{
        font-size: 12px;
    }

    .app .controls #take-photo i{
        font-size: 18px;
    }
}

</style>    


<body class="">
        <a href="#" class="animated bounceInDown" style="position:absolute; background-color: rgba(0, 0, 0, 0.6); padding: 5px;top: 0; left: 0; "><i class="medium material-icons" style="color: #fff;">chevron_left</i></a>
        <!--<a href="#" class="animated bounceInDown" style="position:absolute; background-color: rgba(0, 0, 0, 0.6); padding: 5px;top: 0; right: 0; "><i class="medium material-icons" style="color: #fff;">chevron_right</i></a> -->
        <div class="bg animated pulse"> 
<div class="row">
        <form class="" action="/adddata" method="POST">
<div class="w80">
<div class="parentbox">
    <div class="childbox">
   
       <h3><i class="material-icons prefix">linked_camera </i> Hello ..<%=user.FName %> <%=user.LName %>..Smile You're on Camera  <span> <h1 style="color;#fff"><div id="some_div"></div></h1></span></h3>
           <div class="row"> 
       <div class="input-field col s6 offset-s3">
         <!-- <h4 class="center-align">Verify your mobile number</h4>-->
          <div class=""><!-- cam-->
                <div class="app">
    
                     <a href="#" id="start-camera" class="visible">Touch here to start the app.</a>
                       <video id="camera-stream"></video>
                       <img id="snap">
                       <p id="error-message"></p>
                       
                       <div class="controls">
                            <a href="#" id="delete-photo" title="Delete Photo" class="disabled"><i class="material-icons">delete</i></a>
                           <button type="hidden" href="#" type="button" id="take-photo" title="Take Photo"><i class="material-icons">camera_alt</i></button>
                         <a href="#" id="download-photo" download="selfie.png" title="Save Photo" class="disabled"><i class="material-icons">file_download</i></a>
                        
                        </div> 
                       
                       <!-- Hidden canvas element. Used for taking snapshot of video. -->
                       <canvas></canvas>
                   
                     </div>    
        
        </div>
    
        </div>
  </div>
        
      <!--<div class="col s3">&nbsp;</div>
       <div class="col s1"><i class="material-icons prefix size">chat</i></div>
      <div class="input-field col s1">
         
          <input id="icon_prefix" type="text" class="inputsmaxlength="1" " maxlength="1"  >
          
        </div>
         <div class="input-field col s1">
          
          <input  id="" type="text" class="inputs" maxlength="1"  >
         
        </div> -->
        <input type="hidden" id="FName" type="text" name="FName" value=<%=user.FName %>>
        <input type="hidden" id="LName" type="text" name="LName" value=<%=user.LName %>>
        <input type="hidden" id="business" type="text" name="CName" value=<%=user.Business %>>
        <input type="hidden" id="email" type="text" name="Email" value=<%=user.Email %>>
        <input type="hidden" id="meetingWith" type="text" name="Host" value=<%=user.Host %>>
        <input type="hidden" id="purposeOfTheMeeting" type="text" name="PofMeet" value=<%=user.Purpose %>>
        <input type="hidden" id="Phone" type="tel" name="Phone" value=<%=user.Phone %>>    
        <input type="hidden" id="otp" type="tel" name="otp" value=<%=user.otp %>>
        <input type="hidden" id="nameSearch" type="tel" name="nameSearch" value=<%=user.VID %>>    
        <input type="hidden" id="inp_img" value=" " name="snap" >
      
        <div class="input-field col s12">
          
                <button class="waves-effect waves-light btn default" type="submit"  name="action"  >Next <i class="material-icons prefix back">navigate_next</i>&nbsp;</button>
        </div>
         <div class="clearfix"></div>
      
        
    </div>
</div>

</div>
</form>
</div>

</div>

<script>


    

    var timeLeft = 10;
    var elem = document.getElementById('some_div');
    var timerId = setInterval(countdown, 1000);
    
    function countdown() {
        if (timeLeft == -1) {
            clearTimeout(timerId);
            doSomething();
        } else {
            elem.innerHTML = timeLeft;
            timeLeft--;
        }
    }

    
    $(document).ready(function() {
      setTimeout(function() { 
        $("#take-photo").trigger('click');
      }, 8000);
    
    });
    
    
    
    
    </script>

<script language="javascript" type="text/javascript">
$(".inputs").keyup(function () {
    if (this.value.length == this.maxLength) {
      $(this).next('.inputs').focus();
    }
});
</script>
<script>
  // References to all the element we will need.
var video = document.querySelector('#camera-stream'),
    image = document.querySelector('#snap'),
    start_camera = document.querySelector('#start-camera'),
    controls = document.querySelector('.controls'),
    take_photo_btn = document.querySelector('#take-photo'),
    delete_photo_btn = document.querySelector('#delete-photo'),
    download_photo_btn = document.querySelector('#download-photo'),
    error_message = document.querySelector('#error-message');


// The getUserMedia interface is used for handling camera input.
// Some browsers need a prefix so here we're covering all the options
navigator.getMedia = ( navigator.getUserMedia ||
                      navigator.webkitGetUserMedia ||
                      navigator.mozGetUserMedia ||
                      navigator.msGetUserMedia);


if(!navigator.getMedia){
  displayErrorMessage("Your browser doesn't have support for the navigator.getUserMedia interface.");
}
else{

  // Request the camera.
  navigator.getMedia(
    {
      video: true
    },
    // Success Callback
    function(stream){

      // Create an object URL for the video stream and
      // set it as src of our HTLM video element.
      video.src = window.URL.createObjectURL(stream);

      // Play the video element to start the stream.
      video.play();
      video.onplay = function() {
        showVideo();
      };

    },
    // Error Callback
    function(err){
      displayErrorMessage("There was an error with accessing the camera stream: " + err.name, err);
    }
  );

}



// Mobile browsers cannot play video without user input,
// so here we're using a button to start it manually.
start_camera.addEventListener("click", function(e){

  e.preventDefault();

  // Start video playback manually.
  video.play();
  showVideo();

});



take_photo_btn.addEventListener("click", function(e){

  e.preventDefault();

  var snap = takeSnapshot();

  // Show image. 
  image.setAttribute('src', snap);
  image.classList.add("visible");

  // Enable delete and save buttons
  delete_photo_btn.classList.remove("disabled");
  download_photo_btn.classList.remove("disabled");

  // Set the href attribute of the download button to the snap url.
  //download_photo_btn.href = snap;

  // Pause video playback of stream.
  video.pause();

});





delete_photo_btn.addEventListener("click", function(e){

  e.preventDefault();

  // Hide image.
  image.setAttribute('src', "");
  image.classList.remove("visible");

  // Disable delete and save buttons
  delete_photo_btn.classList.add("disabled");
  download_photo_btn.classList.add("disabled");

  // Resume playback of stream.
  video.play();

});



function showVideo(){
  // Display the video stream and the controls.

  hideUI();
  video.classList.add("visible");
  controls.classList.add("visible");
}


function takeSnapshot(){
  // Here we're using a trick that involves a hidden canvas element.  

  var hidden_canvas = document.querySelector('canvas'),
      context = hidden_canvas.getContext('2d');

  var width = video.videoWidth,
      height = video.videoHeight;

  if (width && height) {

    // Setup a canvas with the same dimensions as the video.
    hidden_canvas.width = width;
    hidden_canvas.height = height;

    // Make a copy of the current frame in the video on the canvas.
    context.drawImage(video, 0, 0, width, height);

    // Turn the canvas image into a dataURL that can be used as a src for our photo.
   // return hidden_canvas.toDataURL('image/png');
    
        var imageDataURL = hidden_canvas.toDataURL('image/png');

    // Set the dataURL as source of an image element, showing the captured photo.
    image.setAttribute('src', imageDataURL); 
   var canvas = document.getElementById('canvas');
    document.getElementById('inp_img').value = imageDataURL;



  }
  

}




function displayErrorMessage(error_msg, error){
  error = error || "";
  if(error){
    console.log(error);
  }

  error_message.innerText = error_msg;

  hideUI();
  error_message.classList.add("visible");
}


function hideUI(){
  // Helper function for clearing the app UI.
  controls.classList.remove("visible");
  start_camera.classList.remove("visible");
  video.classList.remove("visible");
  snap.classList.remove("visible");
  error_message.classList.remove("visible");
}
          </script>

</body>
</html>
